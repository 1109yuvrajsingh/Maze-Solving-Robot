#include<Arduino.h>

//  /dev/tty50

//  /dev/tty50

float lth=5;  // threshold distance for left sensor
float fth=5;  // threshold distance for front sensor

float distance_left,distance_front;  // left and front distance
float duration_left,duration_front; //   

int turning_speed= 200;  // bot speed for taking left or right turn

int normal_speed=150;  // normal bot speed 

///  Doubt::  while taking turn speed of both left and right wheel should be same?? 


// detecting walls
bool leftwall=false;
bool rightwall=false;
bool frontwall=false;

// pin declaration for ultrasonic sensors
int left_trigger=8;   // trigger pin for left sensor
int left_echo=9;     // echo pin for left sensor
int front_trigger=11;     // trigger pin for front sensor
int front_echo=10;   // echo pin for frontsensors
///////////////////////////////////////////////////////////////////////////////////////////

// pin declaration for motor driver of left motor

int enA=6;   // speed control pin for left motor
int in1=7;
int in2=5;  // direction change


// pin declaration for motor driver of right motor

int enB=3;
int in3=2;
int in4=4;

//pin declaration for IR sensor
int IRsense= *(whichever empty);


void readsensor(){
// calculation of distance from right wall
    digitalWrite(left_trigger,LOW);
    delayMicroseconds(2);
    digitalWrite(left_trigger,HIGH);
    delayMicroseconds(10);
    digitalWrite(left_trigger,LOW);
    duration_left=pulseIn(left_echo,HIGH);
    distance_left=(duration_left*0.034/2);
    Serial.print("Left distanmce");
    Serial.println(distance_left);
       // distance from left wall



// calculation of distance from front wall
    digitalWrite(front_trigger,LOW);
    delayMicroseconds(2);
    digitalWrite(front_trigger,HIGH);
    delayMicroseconds(10);
    digitalWrite(front_trigger,LOW);
    duration_front=pulseIn(front_echo,HIGH);
    distance_front=(duration_front*0.034/2);
    Serial.print("Front distance");
    Serial.println(distance_front);
}



void checkwall()
{
  if(leftwall==true && frontwall==false)
  {
    Serial.println("Left wall");
         setdirection(3);
  }
   else if(leftwall==false && frontwall==false)
   {
     Serial.println("No left and front");
          setdirection(1);
   }
   else if(leftwall==false && frontwall==true)
   {
     Serial.println("Front wall");
          setdirection(1);
   }
   else if(leftwall==true && frontwall==true)
   {
     Serial.println("Left and and front wall");
          setdirection(2);       
   }
   
}
void wall_detect()
{
  if(distance_left<lth)
  {
      leftwall=true;
      Serial.println("Left wall Detected");
  }
  if(distance_left>lth)
  {
      leftwall=false;
      Serial.println("No Right wall");
  }
  if(distance_front>fth)
  {
      frontwall=false;
      Serial.println("No front wall");
  }
  if(distance_front<fth)   
  {                      //// if(distance_left==distance_front)  ---> go_straight()////
      frontwall=true;
      Serial.println("Front wall detected");
  }
  if(distance_left>lth && distance_front>fth)
  {
      rightwall=false;
      Serial.println("Right wall detected");
  }

}

void setdirection(int dir){
  if (dir==1)  
  {
      Serial.println("Turn left");
      turn_left();
  }
  if (dir==2)  
   { 
       Serial.println("Turn Right");
         turn_right();
   }
  if (dir==3)
  {
      Serial.println("Go Straight");
      go_straight();
  }
}

void turn_left(){
    digitalWrite(in1,LOW);
    digitalWrite(in2,HIGH);     // to move left tyre in anticlock wise direction
    digitalWrite(in3,HIGH);       // to move right tyre in clock wise direction 
    digitalWrite(in4,LOW);
for(int speed_in1=normal_speed,speed_in3=normal_speed;speed_in1<=turning_speed,speed_in3<=turning_speed;speed_in1++,speed_in3++){

    analogWrite(enA,speed_in1);
    analogWrite(enB,speed_in3);
    Serial.print("Speed Left");
    Serial.println(speed_in1);
    Serial.print("Speed Right");
    Serial.println(speed_in3);
    delay(10);
   }
}

void turn_right(){
        digitalWrite(in1,HIGH);
        digitalWrite(in2,LOW);     // to move left tyre in clock wise direction
        digitalWrite(in3,LOW);       // to move right tyre in anticlock wise direction 
        digitalWrite(in4,HIGH);


    for(int speed_in1=normal_speed,speed_in3=normal_speed;speed_in1<=turning_speed,speed_in3<=turning_speed;speed_in1++,speed_in3++){

        analogWrite(enA,speed_in1);
        analogWrite(enB,speed_in3);
        Serial.println("Speed Left");
        Serial.println(speed_in1);
        Serial.println("Speed Right");
        Serial.println(speed_in3);
        delay(5);
       }
}

void go_straight()
{
        digitalWrite(in1,HIGH);
        digitalWrite(in2,LOW);     // to move left tyre in clock wise direction
        digitalWrite(in3,HIGH);       // to move right tyre in clock wise direction 
        digitalWrite(in4,LOW);
        analogWrite(enA,255);
        analogWrite(enB,255);
        delay(5);
   
    //Commented this out as i'm not sure what this for loop is doing exactly
   /* for(int speed_in1=0,speed_in3=0;speed_in1<=turning_speed,speed_in3<=turning_speed;speed_in1++,speed_in3++){
        analogWrite(enA,speed_in1);
        analogWrite(enB,speed_in3);
        delay(20);
       }*/
}   

void stop(){                         // ******* ir reading --> 0 0 *********
    digitalWrite(in1,LOW);
    digitalWrite(in2,LOW);
    digitalWrite(in3,LOW);
    digitalWrite(in4,LOW);
}

int findline()
{
  int statusSensor = digitalRead(IRsense);
  //if line detected status=1 else 0
   return statusSensor;
  
}

void manual()
{
   if(Serial1.available() > 0)
   {
      data = Serial1.read();
      /* ADD THE RESPECTIVE MOTOR FUNCTIONS IN EACH CASE*/
      if(data == '1')//left 
      {
         Serial.print("move Left"); 
      }
      if(data == '2')//right 
      {
         Serial.print("move Right");
      }
      if(data == '3')//straight 
      {
         Serial.print("move Straight");
      }
      if(data == '4')//pulling 
      {
         Serial.print("Pulls itself up");
      }
       if(data == '5')//gripping 
      {
         Serial.print("Grips");
      }
       if(data == '6')//back
      {
         Serial.print("moves Back");
      }
       if(data == '7')//throwing 
      {
         Serial.print("Throws");
      }
   }
  
}

void setup(){
    pinMode(left_trigger,OUTPUT);   // sets trigger pin for left sensor
    pinMode(front_trigger,OUTPUT);    // sets trigger pin for front sensor
    pinMode(left_echo,INPUT);     // sets echo pin for left sensor
    pinMode(front_echo,INPUT);      // sets echo pin for front sensor
        
        
    //set all the motor control pins to output
    pinMode(enA,OUTPUT);
    pinMode(in1,OUTPUT);
    pinMode(in2,OUTPUT);
    pinMode(enB,OUTPUT);
    pinMode(in3,OUTPUT);
    pinMode(in4,OUTPUT);

    //IR sensor control pins
    pinMode(IRsense,INPUT);
   // pinMode(line,OUTPUT);
    
    Serial.begin(9600); // starts the serial communication
    
    Serial1.begin(9600);//starts communication with bluetooth
}

void autonomous()
{
    readsensor();
    delayMicroseconds(10);
    wall_detect();
    delayMicroseconds(10);
    checkwall();
    delayMicroseconds(10);
}

int line=0;//initilising line with 0
void loop(){
    
    if(line==0)
    {
      autonomous();
      line=findline();
      delayMicroseconds(10);
    }
    if(line==1)
    {
      manual();
    }
     
}
